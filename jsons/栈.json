{
  "topic": "栈",
  "content": {
    "application": "> 栈是一种先进先出(FILO, first in last out)的数据结构，在生活中常见的例子有：\n>\n> - 十进制转换为二进制；\n> - 括号匹配问题；\n> - 函数调用栈；\n\n## 栈的应用场景\n\n### 十进制转换为二进制\n\n十进制转换为二进制的方法是，将十进制数不断除以二，直到商为零，然后从底到上依次取余数，即可得到二进制数。\n\n```js\nfunction dec2bin(decNumber) {\n  const stack = [];\n  while (decNumber > 0) {\n    stack.push(decNumber % 2);\n    decNumber = Math.floor(decNumber / 2);\n  }\n  return stack.reverse().join('');\n}\n\ndec2bin(10); // '1010'\ndec2bin(100); // '1100100'\n```\n\n### 括号匹配问题\n\n例如：\n\n```\n{{([])}}\n\n[()]{}\n```\n\n匹配成功，例如：\n\n```\n{(})\n```\n\n匹配失败，可以通过栈来实现。\n\n```js\nfunction isValid(s) {\n  const stack = [];\n  const pairs = new Map([\n    ['}', '{'],\n    [')', '('],\n    [']', '['],\n  ]);\n  for (let c of s) {\n    if (pairs.has(c)) {\n      if (!stack.length || stack[stack.length - 1] !== pairs.get(c)) {\n        return false;\n      }\n      stack.pop();\n    } else {\n      stack.push(c);\n    }\n  }\n  return !stack.length;\n}\n```\n\n### 函数调用栈\n\n函数调用栈用于追踪程序执行路径。每当进入一个函数时，它的返回地址和参数会被压入栈中。当函数返回时，栈顶的地址会被弹出，控制权会转移到该地址。\n\n```js\nfunction foo(b) {\n  let a = 10;\n  return a + b + 11;\n}\n\nfunction bar(x) {\n  const y = foo(x * 2);\n  return y * 3;\n}\n\nbar(1); // 63\n```\n\n上述代码中，bar 函数的返回地址和参数都被压入栈中，当 bar 函数返回时，栈顶的地址会被弹出，控制权会转移到该地址。\n\n## 栈的实现\n\n### 基于数组的栈\n\n```js\nclass Stack {\n  constructor() {\n    this.stack = [];\n  }\n\n  push(element) {\n    this.stack.push(element);\n  }\n\n  pop() {\n    return this.stack.pop();\n  }\n\n  peek() {\n    return this.stack[this.stack.length - 1];\n  }\n\n  isEmpty() {\n    return this.stack.length === 0;\n  }\n\n  size() {\n    return this.stack.length;\n  }\n}\n```\n\n### 基于链表的栈\n\n```js\nclass Node {\n  constructor(element) {\n    this.element = element;\n    this.next = null;\n  }\n}\n\nclass Stack {\n  constructor() {\n    this.top = null;\n    this.size = 0;\n  }\n\n  push(element) {\n    const node = new Node(element);\n    node.next = this.top;\n    this.top = node;\n    this.size++;\n  }\n\n  pop() {\n    if (this.isEmpty()) {\n      return null;\n    }\n    const element = this.top.element;\n    this.top = this.top.next;\n    this.size--;\n    return element;\n  }\n\n  peek() {\n    if (this.isEmpty()) {\n      return null;\n    }\n    return this.top.element;\n  }\n\n  isEmpty() {\n    return this.size === 0;\n  }\n\n  getSize() {\n    return this.size;\n  }\n}\n```",
    "code": "```python\nclass Stack(object):\n    def __init__(self):\n        self.stack = []\n    \n    def push(self, item):\n        return self.stack.append(item)\n    \n    def pop(self):\n        return self.stack.pop()\n    \n    def peek(self):\n        return self.stack[-1]\n    \n    def isEmpty(self):\n        return len(self.stack) == 0\n    \n    def size(self):\n        return len(self.stack)\n    \n    def __repr__(self):\n        return str(self.stack)\n```\n\n\n```python\nstack = Stack()\nstack.push(1)\nstack.push(2)\nstack.push(3)\nprint(stack.pop())\nprint(stack.peek())\nprint(stack.isEmpty())\nprint(stack.size())\nprint(stack)\n```\n\n    3\n    2\n    False\n    2\n    [1, 2]\n\n\n\n```python\n\n```",
    "comparison": "栈：先进后出，后进先出。栈的特点：数据操作的受限，数据的插入和删除只能在一个位置上进行，先进后出的特点，符合逻辑。\n\n链表：操作灵活，插入和删除快，但是查找慢。链表的特点：数据操作的灵活，但是数据的插入和删除需要移动数据，速度较慢。\n\n数组：查找快，但是插入和删除慢，数据有序，占用空间大。数组的特点：数据的查找快，但是插入和删除的速度慢，数据有序，占用空间大。\n\n二叉树：查找快，插入和删除快，但是不容易排序。二叉树的特点：数据的查找和插入删除快，但是不容易排序。\n\n堆：查找快，插入和删除快，但是不容易排序。堆的特点：数据的查找和插入删除快，但是不容易排序。",
    "concept": "2017年5月18日，中国科学院计算技术研究所的翟天临博士在微博上公布了其博士论文中的一段视频，视频中的翟天临对着镜头自曝“毕业论文抄袭”，并称“没有人性”。视频在网络上被广泛传播，引发舆论哗然。\n事件经过：\n翟天临的毕业论文《论电影<英雄本色>中的英雄主义》，被指抄袭了《美国戏剧的起源》一文。\n论文发表后，翟天临接受采访时也承认了自己的论文存在抄袭。\n5月18日晚间，北京电影学院通过其官方微博发布了《关于对翟天临涉嫌学术不端行为的处理决定》，称已成立调查组，对相关问题进行全面调查，一旦发现学术不端，将坚决查处，绝不护短。\n学术不端事件，一石激起千层浪。\n翟天临事件，再次引发网友对学术不端的关注。\n学术不端，是学术界中常见的学术不端行为之一。学术不端是指不遵守学术道德和学术规范，违背诚信原则和学术规范的行为。\n学术不端的种类：\n学术不端行为按性质可以分为学术道德问题和学术规范问题。\n学术不端行为按行为方式可以分为抄袭、剽窃、篡改、伪造、一稿多投、买卖论文、代写代投、代签名、代笔等。\n学术不端行为按严重程度可以分为轻微不端行为、一般不端行为、严重不端行为。\n学术不端行为按损害结果可以分为损害他人利益、损害学校声誉、损害国家利益等。\n学术不端行为按危害后果可以分为不利于学术发展的、不利于学术研究的、不利于学术规范的、不利于学术风气的。\n学术不端行为按危害后果大小可以分为轻微不端行为、一般不端行为、严重不端行为。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 损害学校声誉，破坏学校的正常秩序和学术道德；\n2. 损害学校的学术权威和学术尊严；\n3. 对学校造成经济损失；\n4. 破坏学校的学术环境；\n5. 损害学校的利益。\n学术不端行为的危害：\n1. 损害国家声誉；\n2. 损害国家形象；\n3. 破坏国家学术研究的严肃性和权威性；\n4. 严重削弱和损害国家学术研究的活力和创造力；\n5. 造成国家经济损失；\n6. 破坏国家学术环境；\n7. 损害国家利益。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的破裂，影响人际关系；\n5. 影响人格的形成；\n6. 造成学术研究成果的严重贬值；\n7. 造成人力、物力、财力的严重浪费。\n学术不端行为的危害：\n1. 破坏学术研究的正常秩序和道德风尚，败坏学术道德；\n2. 损害学术研究的严肃性和权威性；\n3. 严重削弱和损害学术研究的活力和创造力；\n4. 造成人际关系的",
    "traversal": "### 栈的遍历\n\n栈的遍历，也叫做栈的输出，通常是从栈顶到栈底，从后往前输出\n\n### 栈的操作\n\n**入栈**\n\n```js\npush(item) {\n  // 将元素压入栈\n}\n```\n\n**出栈**\n\n```js\npop() {\n  // 移除栈顶的元素，并返回该元素\n}\n```\n\n**查看栈顶元素**\n\n```js\npeek() {\n  // 返回栈顶的元素，不对栈做任何修改（该方法不会移除栈顶的元素，仅仅返回它）\n}\n```\n\n**isEmpty**\n\n```js\nisEmpty() {\n  // 如果栈里没有任何元素就返回 true，否则返回 false\n}\n```\n\n**getBuffer**\n\n```js\ngetBuffer() {\n  // 返回一个包含栈中所有元素的数组\n}\n```\n\n### 伪代码\n\n#### 入栈\n\n```js\npush(element) {\n  items.push(element)\n}\n```\n\n#### 出栈\n\n```js\npop() {\n  return items.pop()\n}\n```\n\n#### 查看栈顶元素\n\n```js\npeek() {\n  return items[items.length - 1]\n}\n```\n\n#### 判断栈是否为空\n\n```js\nisEmpty() {\n  return items.length === 0\n}\n```\n\n#### 获取栈中所有元素\n\n```js\ngetBuffer() {\n  return items.slice()\n}\n```\n\n### 流程图\n\n#### 入栈\n\n![入栈](https://raw.githubusercontent.com/heptaluan/blog-backups/master/cdn/js/16-05.png)\n\n#### 出栈\n\n![出栈](https://raw.githubusercontent.com/heptaluan/blog-backups/master/cdn/js/16-06.png)\n\n#### 查看栈顶元素\n\n![查看栈顶元素](https://raw.githubusercontent.com/heptaluan/blog-backups/master/cdn/js/16-07.png)\n\n#### 判断栈是否为空\n\n![判断栈是否为空](https://raw.githubusercontent.com/heptaluan/blog-backups/master/cdn/js/16-08.png)\n\n#### 获取栈中所有元素\n\n![获取栈中所有元素](https://raw.githubusercontent.com/heptaluan/blog-backups/master/cdn/js/16-09.png)"
  }
}