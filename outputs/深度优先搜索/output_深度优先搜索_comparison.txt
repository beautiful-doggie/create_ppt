## 1. 深度优先搜索

- 深度优先搜索，是一种用于遍历或搜索树或图的算法。它沿着树的深度遍历树的节点，尽可能深的搜索树的分支。

- 深度优先搜索（DFS）可以用递归或栈来实现。

- 当我们想找到特定类型的结点时，深度优先搜索很有用。

## 2. 数组

- 数组是一种线性数据结构，它可以存储一个固定大小的有序列表，数组的元素是可以通过索引来访问的。

- 数组的索引是从0开始的，并且是连续的。

- 数组的优点是快速访问元素，缺点是插入和删除元素比较慢。

## 3. 链表

- 链表是一种线性数据结构，它由一系列节点组成，每个节点包含一个数据元素和一个指向下一个节点的指针。

- 链表的优点是插入和删除元素比较快，缺点是访问元素比较慢。

## 4. 树

- 树是一种非线性数据结构，它由一系列节点组成，每个节点包含一个数据元素和一个指向其他节点的指针。

- 树的根节点是没有父节点的节点，每个节点最多有一个父节点。

- 树的优点是插入和删除元素比较快，缺点是访问元素比较慢。

## 5. 哈希表

- 哈希表是一种线性数据结构，它可以存储一组键值对，并且可以通过键快速查找值。

- 哈希表的键是唯一的，并且可以通过哈希函数来生成一个值。

- 哈希表的优点是快速查找元素，缺点是插入和删除元素比较慢。

## 6. 堆

- 堆是一种树形数据结构，它可以存储一组元素，并且可以快速找到最大值或最小值。

- 堆的根节点是最大值或最小值。

- 堆的优点是快速查找最大值或最小值，缺点是插入和删除元素比较慢。

## 7. 图

- 图是一种非线性数据结构，它由一系列节点和边组成，每个节点和每个边都有一个数据元素。

- 图的节点可以是无向的，也可以是有向的。

- 图的优点是可以表示复杂的网络结构，缺点是查找元素比较慢。